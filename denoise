import os
import noisereduce as nr
from scipy.io import wavfile
import scipy.signal
import numpy as np
import librosa
import shutil

def float2pcm(sig, dtype='int16'):

    sig = np.asarray(sig)
    if sig.dtype.kind != 'f':
        raise TypeError("'sig' must be a float array")
    dtype = np.dtype(dtype)
    if dtype.kind not in 'iu':
        raise TypeError("'dtype' must be an integer type")

    i = np.iinfo(dtype)
    abs_max = 2 ** (i.bits - 1)
    offset = i.min + abs_max
    return (sig * abs_max + offset).clip(i.min, i.max).astype(dtype)


MYDIR = os.getcwd() + "/"


'''
# remove non wav and M3 files
for filename in os.listdir(MYDIR):
	if filename.endswith("M3.wav") == False and filename.endswith(".py") == False:
		os.remove(filename)
		print("removing --> ", filename)
'''

# remove noise (must use floating point)
for filename in os.listdir(MYDIR):
	if filename.endswith(".wav") and filename.startswith("NR") == False:
		samples, sample_rate = librosa.load(filename)
		noisy_part = samples[0:5000]
		reduced_noise = nr.reduce_noise(audio_clip=samples, noise_clip=noisy_part, verbose=False)
		scipy.io.wavfile.write(filename="NR_" +filename, rate=sample_rate, data=reduced_noise)

NEWDIR = os.mkdir(MYDIR + "/denoised")
# convert back to signed integer and move to denoised folder
for filename in os.listdir(MYDIR):
	if filename.startswith("NR"):
		samples, sample_rate = librosa.load(filename, sr=16000)
		new_audio = float2pcm(samples, dtype='int16')
		scipy.io.wavfile.write(filename= filename, rate=sample_rate, data=new_audio)
		shutil.move(MYDIR + filename, MYDIR + "/denoised/" + filename )

